{"version":3,"sources":["components/ideas.js"],"names":["angular","module","controller","$scope","$http","endpoint","wpApiSettings","root","loading","ideas","ideasOffset","ideasTotal","ideasMore","query","initIdeas","index","getIdeas","offset","params","length","s","method","url","headers","X-WP-Nonce","nonce","then","result","data","total","forEach","idea","push","Hametuha","alert","search","i","nextIdeas","stock","id","indexToUpdate","l","ID","response","location","message","unstock","indexToRemove","confirm","own","stocking","splice","removeIdea"],"mappings":"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","file":"../../components/ideas.js","sourcesContent":["/**\n * Follower application\n */\n\n/* global wpApiSettings:false */\n\nangular.module('hametuha')\n    .controller('ideaList', ['$scope', '$http', function ($scope, $http) {\n\n        'use strict';\n\n        var endpoint = wpApiSettings.root + 'hametuha/v1/idea/mine/';\n\n        // ideas\n        $scope.loading = false;\n        $scope.ideas = [];\n        $scope.ideasOffset = 0;\n        $scope.ideasTotal = 1;\n        $scope.ideasMore = true;\n        $scope.query = '';\n\n        // Initialize ideas.\n        $scope.initIdeas = function (index) {\n            $scope.getIdeas(0);\n        };\n\n        // Get ideas\n        $scope.getIdeas = function (offset) {\n            var params = {\n                offset: offset\n            };\n            if( $scope.query.length ){\n                params.s = $scope.query;\n            }\n            $scope.loading = true;\n            $http({\n                method : 'GET',\n                url    : endpoint,\n                headers: {\n                    'X-WP-Nonce': wpApiSettings.nonce\n                },\n                params : params\n            }).then(\n                function (result) {\n                    $scope.ideasTotal = result.data.total;\n                    $scope.ideasOffset = result.data.offset;\n                    if ( result.data.ideas.length ) {\n                        angular.forEach(result.data.ideas, function (idea) {\n                            $scope.ideas.push(idea);\n                        });\n                    } else {\n                        $scope.ideasMore = false;\n                        Hametuha.alert('これ以上のアイデアは保存されていません。');\n                    }\n                    $scope.loading = false;\n                },\n                function (result) {\n                    Hametuha.alert('アイデアを取得できませんでした', true);\n                    $scope.loading = false;\n                }\n            );\n        };\n\n        // Add query and refresh search\n        $scope.search = function(query){\n            $scope.query = query;\n            for( var i = $scope.ideas.length - 1; i >= 0; i--){\n                delete $scope.ideas[i];\n            }\n            $scope.ideas = [];\n            $scope.ideasOffset = 0;\n            $scope.ideasTotal = 1;\n            $scope.ideasMore = true;\n            $scope.getIdeas(0);\n        };\n\n        // Get next ideas\n        $scope.nextIdeas = function () {\n            $scope.getIdeas($scope.ideasOffset + 20);\n        };\n\n        // Stock recommended\n        $scope.stock = function(id){\n            var indexToUpdate = null;\n            for(var i = 0, l = $scope.ideas.length; i < l; i++){\n                if( $scope.ideas[i].ID == id ){\n                    indexToUpdate = i;\n                    break;\n                }\n            }\n            if( null !== indexToUpdate ) {\n                $scope.loading = true;\n                $http({\n                    method : 'POST',\n                    url    : wpApiSettings.root + 'hametuha/v1/idea/' + id + '/',\n                    headers: {\n                        'X-WP-Nonce': wpApiSettings.nonce\n                    }\n                }).then(\n                    function(response){\n                       $scope.ideas[indexToUpdate].location = 1;\n                    },\n                    function(response){\n                        Hametuha.alert(response.data.message, true);\n                    }\n                ).then(function(){\n                    $scope.loading = false;\n                });\n            }\n        };\n\n        // Unstock idea\n        $scope.unstock = function(id){\n            var indexToRemove = null;\n            for(var i = 0, l = $scope.ideas.length; i < l; i++){\n                if( $scope.ideas[i].ID == id ){\n                    indexToRemove = i;\n                    break;\n                }\n            }\n            if( null !== indexToRemove ){\n                $scope.loading = true;\n                Hametuha.confirm('このアイデアのストックを解除しますか？', function () {\n                    $http({\n                        method : 'DELETE',\n                        url    : wpApiSettings.root + 'hametuha/v1/idea/' + id + '/',\n                        headers: {\n                            'X-WP-Nonce': wpApiSettings.nonce\n                        }\n                    }).then(\n                        function (response) {\n                            var idea = $scope.ideas[indexToRemove];\n                            if( ! idea.own ){\n                                $scope.ideas.splice(indexToRemove, 1);\n                                $scope.ideasTotal--;\n                                $scope.offset--;\n                            }else{\n                                $scope.ideas[i].location = 0;\n                                $scope.ideas[i].stocking = false;\n                            }\n                        },\n                        function (response) {\n                            Hametuha.alert(response.data.message, true);\n                        }\n                    ).then(function(){\n                        $scope.loading = false;\n                    });\n                });\n            }\n        };\n\n        // Remove idea\n        $scope.removeIdea = function (id) {\n            Hametuha.confirm('このアイデアを削除してよろしいですか？', function () {\n                var indexToRemove = null;\n\n                for (var i = 0, l = $scope.ideas.length; i < l; i++) {\n                    if ($scope.ideas[i].ID == id) {\n                        indexToRemove = i;\n                        break;\n                    }\n                }\n\n                if (null !== indexToRemove) {\n                    $scope.loading = true;\n                    $http({\n                        method : 'DELETE',\n                        url    : endpoint + '?post_id=' + id,\n                        headers: {\n                            'X-WP-Nonce': wpApiSettings.nonce\n                        }\n                    }).then(\n                        function (result) {\n                            $scope.ideas.splice(indexToRemove, 1);\n                            $scope.ideasTotal--;\n                            $scope.offset--;\n                        },\n                        function (response) {\n                            Hametuha.alert(response.data.message, true);\n                        }\n                    ).then(function(){\n                        $scope.loading = false;\n                    });\n                }\n\n            }, true);\n\n        };\n\n    }])\n;\n"]}