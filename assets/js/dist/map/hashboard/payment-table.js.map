{"version":3,"sources":["hashboard/payment-table.js"],"names":["$","displayMoney","value","parseInt","toString","replace","Vue","filter","currency","prefix","price","split","int","join","getUnitSuffix","store","curMonth","curYear","getLabel","string","location","hash","match","RegExp","$1","slice","Date","getMonth","getFullYear","el","data","loading","total","tax","available","currentYear","currentMonth","records","options","responsive","maintainAspectRatio","scales","yAxes","id","type","position","tooltips","enabled","mode","callbacks","label","tooltipItems","datasetIndex","yLabel","datasets","chartData","computed","endpoint","attr","this","methods","errorHandler","response","msg","responseJSON","message","Hashboard","toast","fillDate","index","end","i","push","exchange","ratio","getSales","year","month","self","hbRest","done","length","labels","each","record","date","parseFloat","royalty","unit","yAxisID","backgroundColor","borderColor","fill","colors","colorIndex","prop","hasOwnProperty","fail","hbRestError","always","getReward","status","deducting","enough","getPayments","mounted","jQuery"],"mappings":"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","file":"../../hashboard/payment-table.js","sourcesContent":["/*!\n * wpdeps=hashboard,hb-components-bar-chart,hb-components-pagination,hb-components-month-selector,hb-filters-moment\n */\n\n/*global Materialize: false*/\n/*global Vue: false*/\n\n(function ($) {\n\n  'use strict';\n\n\n  var displayMoney = function(value){\n    value = parseInt( value, 10 );\n    return '¥' + value.toString().replace(/([0-9]+?)(?=(?:[0-9]{3})+$)/g , '$1,');\n  };\n\n  // Looks like money\n  Vue.filter('monetize', displayMoney);\n\n  Vue.filter('currency', function(value, currency){\n    var price = value.split('.');\n    var int = parseInt( price ).toString().replace(/([0-9]+?)(?=(?:[0-9]{3})+$)/g , '$1,');\n    var prefix, join = false;\n    switch ( currency ) {\n      case 'USD':\n        prefix = '$';\n        join = true;\n        break;\n      case 'GBP':\n        prefix = '£';\n        join = true;\n        break;\n      case 'EUR':\n        prefix = '€';\n        join = true;\n        break;\n      case 'JPY':\n      default:\n        prefix = '¥';\n        break;\n    }\n    if (join) {\n      int += '.' + price[1];\n    }\n    return prefix + int;\n  });\n\n  var getUnitSuffix = function(store){\n    switch ( store ) {\n      case 'KENP':\n        return 'P';\n      default:\n        return '部';\n    }\n  };\n\n  Vue.filter('addSuffix', function(value, store){\n    return value + getUnitSuffix(store);\n  });\n\n  var getLabel = function(string){\n    switch (string) {\n      case 'Amazon':\n        return 'KDP';\n      default:\n        return string;\n    }\n  };\n\n  Vue.filter('labeling', getLabel);\n\n\n\n  var curMonth, curYear;\n    if(location.hash.match(/month=(\\d{2})/)){\n      curMonth = ('0' + RegExp.$1).slice(-2);\n    } else {\n      curMonth = ( '0' + ( new Date().getMonth() + 1 ) ).slice(-2);\n    }\n    if(location.hash.match(/year=(\\d{4})/)){\n      curYear = RegExp.$1;\n    } else {\n      curYear = new Date().getFullYear();\n    }\n\n  var app = new Vue({\n    el: '#sales-container',\n    data: {\n      loading: true,\n      total: 0,\n      tax: 0,\n      available: false,\n      currentYear: curYear,\n      currentMonth:  curMonth,\n      records: [\n\n      ],\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [\n            {\n              id: \"y-axis-price\",\n              type: \"linear\",\n              position: \"left\"\n            },\n            {\n              id: \"y-axis-copy\",\n              type: \"linear\",\n              position: \"right\"\n            },\n            {\n              id: \"y-axis-page\",\n              type: \"linear\",\n              position: \"right\"\n            }\n          ]\n        },\n        tooltips: {\n          enabled: true,\n          mode: 'single',\n          callbacks: {\n            label: function(tooltipItems, data) {\n              if( tooltipItems.datasetIndex ){\n                return tooltipItems.yLabel + getUnitSuffix(data.datasets[tooltipItems.datasetIndex].label);\n              } else {\n                return displayMoney( tooltipItems.yLabel );\n              }\n            }\n          }\n        }\n      },\n      chartData: {}\n    },\n    computed: {\n      endpoint: function(){\n        return $('#sales-container').attr('data-endpoint');\n      },\n      curMonth: function(){\n        return parseInt(this.curMonth, 10);\n      },\n      curYear: function(){\n        return parseInt(this.curYear, 10);\n      }\n    },\n    methods: {\n\n      errorHandler: function() {\n        return function(response){\n          var msg = 'データの取得ができませんでした。';\n          if (response.responseJSON && response.responseJSON.message) {\n            msg = response.responseJSON.message;\n          }\n          Hashboard.toast('<i class=\"material-icons error\">close</i>' + msg, 4000);\n        };\n      },\n\n      fillDate: function(data, index, value, end){\n        if(!data){\n          data = [];\n          for(var i = 0; i < end; i++){\n            data.push(0);\n          }\n        }\n        data[index] += value;\n        return data;\n      },\n\n      exchange: function(price, currency){\n        var ratio;\n        switch(currency) {\n          case 'JPY':\n            ratio = 1;\n            break;\n          case 'GBP':\n            ratio = 150;\n            break;\n          case 'EUR':\n            ratio = 130;\n            break;\n          default:\n            ratio = 100;\n            break;\n        }\n        return price * ratio;\n      },\n\n      getSales: function(year, month){\n        var self = this;\n        this.loading = true;\n        $.hbRest( 'GET', this.endpoint, {\n          year: year,\n          month: month\n        } ).done(function(response){\n          self.total = response.total;\n          self.records = response.records;\n          var chartData = {};\n          if ( ! response.records.length ) {\n            self.chartData = chartData;\n            return;\n          }\n          var labels = [];\n          var end = [31, ( ( year % 4 === 0 && year % 100 !== 0 ) ? 29 : 28), 31, 30, 31, 30, 31,31, 30, 31, 30, 31][parseInt(month, 10) - 1];\n          var price = null;\n          var datasets = {};\n          for(var i = 1; i <= end; i++ ) {\n            labels.push(i);\n          }\n          $.each( response.records, function(index, record){\n            var label = getLabel(record.store);\n            var date = parseInt( record.date.replace( /^\\d{4}-\\d{2}-/, ''), 10 ) - 1 ;\n            price = self.fillDate(price, date, self.exchange( parseFloat(record.royalty), record.currency ), end);\n            datasets[label] = self.fillDate( datasets[label], date, parseInt( record.unit, 10 ), end );\n          } );\n          chartData.labels = labels;\n          chartData.datasets = [\n            {\n              type: 'line',\n              label: '売上高',\n              yAxisID: 'y-axis-price',\n              data: price,\n              backgroundColor: 'rgba(248,121,121,1)',\n              borderColor: 'rgba(248,121,121,.6)',\n              fill: false\n            }\n          ];\n          var colors = [\n            '#039BE5',\n            '#388E3C',\n            '#7B1FA2',\n            '#F57C00',\n            '#0097A7',\n            '#455A64'\n          ];\n          var colorIndex = 0;\n          for(var prop in datasets){\n            if(datasets.hasOwnProperty(prop)){\n              chartData.datasets.push({\n                type: 'bar',\n                label: prop,\n                yAxisID: 'KENP' === prop ? 'y-axis-page' : 'y-axis-copy',\n                data: datasets[prop],\n                backgroundColor: colors[colorIndex]\n              });\n              colorIndex++;\n            }\n          }\n          self.chartData = chartData;\n        }).fail($.hbRestError()).always(function(){\n          self.loading = false;\n        });\n      },\n\n      getReward: function (year, month, status) {\n        var self = this;\n        this.loading = true;\n        $.hbRest( 'GET', this.endpoint, {\n          year: year,\n          month: month,\n          status: ( 'undefined' === typeof status ) ? 'all' : status\n        } ).done(function(response){\n          self.total = response.total;\n          self.tax = response.deducting;\n          self.available = response.enough,\n          self.records = response.records;\n        }).fail($.hbRestError()).always(function(){\n          self.loading = false;\n        });\n      },\n\n      getPayments: function(){\n        var self = this;\n        this.loading = true;\n        $.hbRest( 'GET', this.endpoint, {\n          year: this.currentYear\n        } ).done(function(response){\n          self.total = response.total;\n          self.tax = response.deducting;\n          self.records = response.records;\n        }).fail($.hbRestError()).always(function(){\n          self.loading = false;\n        });\n      }\n    },\n\n    mounted: function(){\n      var date = new Date();\n      switch ( $('#sales-container').attr('data-slug') ) {\n        case 'rewards':\n          this.getReward( this.currentYear, this.currentMonth, 1 );\n          break;\n        case 'deposit':\n          this.getReward( '0000', 0, 0 );\n          break;\n        case 'payments':\n          this.getPayments();\n          break;\n        case 'history':\n          this.getSales( this.currentYear, this.currentMonth );\n          break;\n      }\n    }\n  });\n\n})(jQuery);\n"]}