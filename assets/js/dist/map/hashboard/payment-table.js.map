{"version":3,"sources":["hashboard/payment-table.js"],"names":["$","displayMoney","value","parseInt","toString","replace","Vue","filter","currency","prefix","price","split","int","join","getUnitSuffix","store","getLabel","string","curMonth","curYear","location","hash","match","RegExp","$1","slice","Date","getMonth","getFullYear","el","data","loading","total","tax","available","currentYear","currentMonth","records","options","responsive","maintainAspectRatio","scales","yAxes","id","type","position","tooltips","enabled","mode","callbacks","label","tooltipItems","datasetIndex","yLabel","datasets","chartData","computed","endpoint","attr","this","methods","errorHandler","response","msg","responseJSON","message","Materialize","toast","fillDate","index","end","i","push","exchange","ratio","getSales","year","month","self","hbRest","done","length","labels","each","record","date","parseFloat","royalty","unit","yAxisID","backgroundColor","borderColor","fill","colors","colorIndex","prop","hasOwnProperty","fail","hbRestError","always","getReward","status","deducting","enough","getPayments","mounted","jQuery"],"mappings":"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","file":"../../hashboard/payment-table.js","sourcesContent":["/*global Materialize: false*/\n/*global Vue: false*/\n\n(function ($) {\n\n  'use strict';\n\n\n  var displayMoney = function(value){\n    value = parseInt( value, 10 );\n    return '¥' + value.toString().replace(/([0-9]+?)(?=(?:[0-9]{3})+$)/g , '$1,');\n  };\n\n  // Looks like money\n  Vue.filter('monetize', displayMoney);\n\n  Vue.filter('currency', function(value, currency){\n    var price = value.split('.');\n    var int = parseInt( price ).toString().replace(/([0-9]+?)(?=(?:[0-9]{3})+$)/g , '$1,');\n    var prefix, join = false;\n    switch ( currency ) {\n      case 'USD':\n        prefix = '$';\n        join = true;\n        break;\n      case 'GBP':\n        prefix = '£';\n        join = true;\n        break;\n      case 'EUR':\n        prefix = '€';\n        join = true;\n        break;\n      case 'JPY':\n      default:\n        prefix = '¥';\n        break;\n    }\n    if (join) {\n      int += '.' + price[1];\n    }\n    return prefix + int;\n  });\n\n  var getUnitSuffix = function(store){\n    switch ( store ) {\n      case 'KENP':\n        return 'P';\n        break;\n      default:\n        return '部';\n        break;\n    }\n  };\n\n  Vue.filter('addSuffix', function(value, store){\n    return value + getUnitSuffix(store);\n  });\n\n  var getLabel = function(string){\n    switch (string) {\n      case 'Amazon':\n        return 'KDP';\n        break;\n      default:\n        return string;\n        break;\n    }\n  };\n\n  Vue.filter('labeling', getLabel);\n\n\n\n  var curMonth, curYear;\n    if(location.hash.match(/month=(\\d{2})/)){\n      curMonth = ('0' + RegExp.$1).slice(-2);\n    } else {\n      curMonth = ( '0' + ( new Date().getMonth() + 1 ) ).slice(-2);\n    }\n    if(location.hash.match(/year=(\\d{4})/)){\n      curYear = RegExp.$1;\n    } else {\n      curYear = new Date().getFullYear();\n    }\n\n  var app = new Vue({\n    el: '#sales-container',\n    data: {\n      loading: true,\n      total: 0,\n      tax: 0,\n      available: false,\n      currentYear: curYear,\n      currentMonth:  curMonth,\n      records: [\n\n      ],\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [\n            {\n              id: \"y-axis-price\",\n              type: \"linear\",\n              position: \"left\"\n            },\n            {\n              id: \"y-axis-copy\",\n              type: \"linear\",\n              position: \"right\"\n            },\n            {\n              id: \"y-axis-page\",\n              type: \"linear\",\n              position: \"right\"\n            }\n          ]\n        },\n        tooltips: {\n          enabled: true,\n          mode: 'single',\n          callbacks: {\n            label: function(tooltipItems, data) {\n              if( tooltipItems.datasetIndex ){\n                return tooltipItems.yLabel + getUnitSuffix(data.datasets[tooltipItems.datasetIndex].label);\n              } else {\n                return displayMoney( tooltipItems.yLabel );\n              }\n            }\n          }\n        }\n      },\n      chartData: {}\n    },\n    computed: {\n      endpoint: function(){\n        return $('#sales-container').attr('data-endpoint');\n      },\n      curMonth: function(){\n        return parseInt(this.curMonth, 10);\n      },\n      curYear: function(){\n        return parseInt(this.curYear, 10);\n      }\n    },\n    methods: {\n\n      errorHandler: function() {\n        return function(response){\n          var msg = 'データの取得ができませんでした。';\n          if (response.responseJSON && response.responseJSON.message) {\n            msg = response.responseJSON.message;\n          }\n          Materialize.toast('<i class=\"material-icons error\">close</i>' + msg, 4000);\n        };\n      },\n\n      fillDate: function(data, index, value, end){\n        if(!data){\n          data = [];\n          for(var i = 0; i < end; i++){\n            data.push(0);\n          }\n        }\n        data[index] += value;\n        return data;\n      },\n\n      exchange: function(price, currency){\n        var ratio;\n        switch(currency) {\n          case 'JPY':\n            ratio = 1;\n            break;\n          case 'GBP':\n            ratio = 150;\n            break;\n          case 'EUR':\n            ratio = 130;\n            break;\n          default:\n            ratio = 100;\n            break;\n        }\n        return price * ratio;\n      },\n\n      getSales: function(year, month){\n        var self = this;\n        this.loading = true;\n        $.hbRest( 'GET', this.endpoint, {\n          year: year,\n          month: month\n        } ).done(function(response){\n          self.total = response.total;\n          self.records = response.records;\n          var chartData = {};\n          if ( ! response.records.length ) {\n            self.chartData = chartData;\n            return;\n          }\n          var labels = [];\n          var end = [31, ( ( year % 4 === 0 ) ? 29 : 28), 31, 30, 31, 30, 31,31, 30, 31, 30, 31][parseInt(month, 10) - 1];\n          var price = null;\n          var datasets = {};\n          for(var i = 1; i <= end; i++ ) {\n            labels.push(i);\n          }\n          $.each( response.records, function(index, record){\n            var label = getLabel(record.store);\n            var date = parseInt( record.date.replace( /^\\d{4}-\\d{2}-/, ''), 10 ) - 1 ;\n            price = self.fillDate(price, date, self.exchange( parseFloat(record.royalty), record.currency ), end);\n            datasets[label] = self.fillDate( datasets[label], date, parseInt( record.unit, 10 ), end );\n          } );\n          chartData.labels = labels;\n          chartData.datasets = [\n            {\n              type: 'line',\n              label: '売上高',\n              yAxisID: 'y-axis-price',\n              data: price,\n              backgroundColor: 'rgba(248,121,121,1)',\n              borderColor: 'rgba(248,121,121,.6)',\n              fill: false\n            }\n          ];\n          var colors = [\n            '#039BE5',\n            '#388E3C',\n            '#7B1FA2',\n            '#F57C00',\n            '#0097A7',\n            '#455A64'\n          ];\n          var colorIndex = 0;\n          for(var prop in datasets){\n            if(datasets.hasOwnProperty(prop)){\n              chartData.datasets.push({\n                type: 'bar',\n                label: prop,\n                yAxisID: 'KENP' === prop ? 'y-axis-page' : 'y-axis-copy',\n                data: datasets[prop],\n                backgroundColor: colors[colorIndex]\n              });\n              colorIndex++;\n            }\n          }\n          self.chartData = chartData;\n        }).fail($.hbRestError()).always(function(){\n          self.loading = false;\n        });\n      },\n\n      getReward: function (year, month, status) {\n        var self = this;\n        this.loading = true;\n        $.hbRest( 'GET', this.endpoint, {\n          year: year,\n          month: month,\n          status: ( 'undefined' === typeof status ) ? 'all' : status\n        } ).done(function(response){\n          self.total = response.total;\n          self.tax = response.deducting;\n          self.available = response.enough,\n          self.records = response.records;\n        }).fail($.hbRestError()).always(function(){\n          self.loading = false;\n        });\n      },\n\n      getPayments: function(){\n        var self = this;\n        this.loading = true;\n        $.hbRest( 'GET', this.endpoint, {\n          year: this.currentYear\n        } ).done(function(response){\n          self.total = response.total;\n          self.tax = response.deducting;\n          self.records = response.records;\n        }).fail($.hbRestError()).always(function(){\n          self.loading = false;\n        });\n      }\n    },\n\n    mounted: function(){\n      var date = new Date();\n      switch ( $('#sales-container').attr('data-slug') ) {\n        case 'rewards':\n          this.getReward( this.currentYear, this.currentMonth, 1 );\n          break;\n        case 'deposit':\n          this.getReward( this.currentYear, this.currentMonth, 0 );\n          break;\n        case 'payments':\n          this.getPayments();\n          break;\n        case 'history':\n          this.getSales( this.currentYear, this.currentMonth );\n          break;\n      }\n    }\n  });\n\n})(jQuery);\n"]}