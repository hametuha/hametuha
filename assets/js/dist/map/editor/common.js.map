{"version":3,"sources":["editor/common.js"],"names":["$","resize","delay","timer","clearTimeout","setTimeout","winHeight","window","height","$container","$editor","pad","outerHeight","document","ready","initTimer","setInterval","length","clearInterval","click","e","preventDefault","url","this","attr","Hametuha","confirm","location","href","on","angular","module","filter","string","context","toLowerCase","directive","restrict","replace","scope","status","templateUrl","template","$uibModal","postDate","postStatus","postCallback","link","$scope","$elem","ask","modal","open","animation","controller","size","result","then","$uibModalInstance","type","errorMsg","ok","cancel","dismiss","$http","$timeout","api","method","endpoint","data","request","wpApiSettings","root","headers","X-WP-Nonce","nonce","params","start","addClass","end","removeClass","errorHandler","response","alert","message","postData","title","post","tinyMCE","activeEditor","save","content","val","cat","taxonomy","term_id","HameditorPost","categories","forEach","option","active","id","now","Date","toISOString","modified","publish","date","redirect","jQuery"],"mappings":"CAUA,SAAWA,GACP,YASA,SAASC,GAAOC,GACPA,IACDA,EAAQ,KAERC,GACAC,aAAaD,GAEjBA,EAAQE,WAAW,WACf,GAAIC,GAAaN,EAAEO,QAAQC,SACvBC,EAAaT,EAAE,yBACfU,EAAaV,EAAE,yBACfQ,EAAaE,EAAQF,SACrBG,EAAaL,EAAYG,EAAWG,aACxCF,GAAQF,OAAOA,EAASG,EAAM,IAC/BT,GArBP,GAAIC,EA0BJH,GAAEa,UAAUC,MAAM,WAEd,GAAIC,GAAYC,YAAY,WACpBhB,EAAE,yBAAyBiB,SAC3BC,cAAcH,GACdd,EAAO,MAEZ,IAEHD,GAAE,kBAAkBmB,MAAM,SAAUC,GAChCA,EAAEC,gBACF,IAAIC,GAAMtB,EAAEuB,MAAMC,KAAK,OACvBC,UAASC,QAAQ,uCAAwC,WACrDnB,OAAOoB,SAASC,KAAON,QAMnCtB,EAAEO,QAAQsB,GAAG,SAAU,WACnB5B,MAGJD,EAAEa,UAAUC,MAAM,WACdgB,QAAQC,OAAO,YAAa,iBACvBC,OAAO,QAAS,WACb,MAAO,UAAUC,EAAQC,GACrB,OAAQA,GACJ,IAAK,aACD,OAAQD,EAAOE,eACX,IAAK,UACD,MAAO,MACX,KAAK,SACD,MAAO,MACX,KAAK,UACD,MAAO,KACX,KAAK,aACL,IAAK,QACD,MAAO,KACX,KAAK,UACD,MAAO,QACX,SACI,MAAOF,GAEf,KACJ,KAAK,kBACD,OAAOA,EAAOE,eACV,IAAK,UACL,IAAK,SACD,MAAO,SACX,KAAK,UACD,MAAO,QACX,KAAK,UACD,MAAO,SACX,SACI,MAAO,UAEf,KACJ,SACI,MAAOF,QAItBG,UAAU,aAAc,WACrB,OACIC,SAAU,IACVC,SAAS,EACTC,OACGC,OAAQ,KAEXC,YAAahB,SAASiB,SAAS,uBAGtCN,UAAU,iBAAkB,YAAa,SAASO,GAC/C,OACIN,SAAU,IACVC,SAAS,EACTC,OACIK,SAAU,IACVC,WAAY,IACZC,aAAc,KAElBL,YAAahB,SAASiB,SAAS,uBAC/BK,KAAM,SAASC,EAAQC,EAAOzB,GAE1BwB,EAAOE,IAAM,WACT,GAAIC,GAAQR,EAAUS,MAClBC,WAAW,EACXZ,YAAahB,SAASiB,SAAS,2BAC/BY,WAAY,mBACZC,KAAM,MAEVJ,GAAMK,OAAOC,KACT,SAASD,KAET,oBAQnBF,WAAW,oBAAqB,SAAU,oBAAqB,SAASN,EAAQU,GAE7EV,EAAOW,KAAO,GAEdX,EAAOY,SAAW,GAElBZ,EAAOa,GAAK,WACRb,EAAOY,SAAW,SAItBZ,EAAOc,OAAS,WACZd,EAAOY,SAAW,GAClBF,EAAkBK,QAAQ,cAGjCT,WAAW,aAAc,SAAU,QAAS,WAAY,SAAUN,EAAQgB,EAAOC,GAU9E,QAASC,GAAIC,EAAQC,EAAUC,GAC3B,GAAIC,IACAH,OAASA,EACT7C,IAASiD,cAAcC,KAAOJ,EAC9BK,SACIC,aAAcH,cAAcI,OAGpC,IAAIN,EACA,OAAQF,GACJ,IAAK,OACL,IAAK,MACDG,EAAQD,KAAOA,CACf,MACJ,SACIC,EAAQM,OAASP,EAI7B,MAAOL,GAAMM,GAMjB,QAASO,KACL7E,EAAE,uBAAuB8E,SAAS,+BAMtC,QAASC,KACL/E,EAAE,uBAAuBgF,YAAY,+BAQzC,QAASC,GAAaC,GAClBzD,SAAS0D,MAAMD,EAASb,KAAKe,SAAS,GAS1C,QAASC,GAAShB,GAQd,MAPAA,GAAKiB,MAAQtC,EAAOuC,KAAKD,MACzBE,QAAQC,aAAaC,OACrBrB,EAAKsB,QAAU3F,EAAE,UAAU4F,MAC3BvB,EAAKwB,KACDC,SAAU,WACVC,QAAU/C,EAAOuC,KAAKM,KAEnBxB,EAGXrB,EAAOuC,KAAOS,cAEdA,cAAcC,WAAWC,QAAQ,SAASC,GACnCA,EAAOC,SACNpD,EAAOuC,KAAKM,IAAMM,EAAOE,MAOjCrD,EAAO0C,KAAO,WACVb,GACA,IAAIyB,IAAM,GAAKC,OAAQC,aACvBtC,GAAI,OAAQ,SAAWlB,EAAOuC,KAAK5B,KAAO,IAAMX,EAAOuC,KAAKc,GAAIhB,GAC5DoB,SAAUH,KACV7C,KACA,SAASyB,GACLlC,EAAOuC,KAAKkB,SAAWH,EACvBtD,EAAOuC,KAAKjE,IAAM4D,EAASb,KAAKtB,KAChCtB,SAAS0D,MAAM,UAAW,UAAW,MAEzCF,GACFxB,KAAKsB,IAMX/B,EAAO0D,QAAU,WACbjF,SAASC,QAAQ,eAAgB,WAC7BmD,GACA,IAAIyB,IAAM,GAAKC,OAAQC,aACvBtC,GAAI,OAAQ,SAAWlB,EAAOuC,KAAK5B,KAAO,IAAMX,EAAOuC,KAAKc,GAAIhB,GAC5D7C,OAAQ,UACRmE,KAAQL,KACR7C,KACA,SAAUyB,GACNlC,EAAOuC,KAAK/C,OAAS,UACrBQ,EAAOuC,KAAKkB,SAAWH,EACvBtD,EAAOuC,KAAKoB,KAAOL,EACnBtD,EAAOuC,KAAKjE,IAAM4D,EAASb,KAAKtB,KAChCtB,SAAS0D,MAAM,eAAgB,UAAW,MAE9CF,GACFxB,KAAKsB,MAOf/B,EAAAA,WAAiB,WACb6B,IACAX,EAAI,OAAQ,SAAWlB,EAAOuC,KAAK5B,KAAO,IAAMX,EAAOuC,KAAKc,GAAIhB,GAC5D7C,OAAQ,aACRiB,KACA,SAAUyB,GACNlC,EAAOuC,KAAK/C,OAAS,UACrBQ,EAAOuC,KAAKjE,IAAM4D,EAASb,KAAKtB,KAChCtB,SAAS0D,MAAM,eAAgB,UAAW,MAE9CF,GACFxB,KAAKsB,IAQX/B,EAAAA,UAAgB,SAAU4D,GACtBnF,SAASC,QAAQ,kCAAmC,WAChDmD,IACAX,EAAI,SAAU,SAAWlB,EAAOuC,KAAK5B,KAAO,IAAMX,EAAOuC,KAAKc,IAAI5C,KAC9D,WACIhC,SAAS0D,MAAM,mBAAoB,UAAW,KAC9ClB,EAAS,WACL1D,OAAOoB,SAASC,KAAOgF,GACxB,MAEP3B,GACFxB,KAAKsB,KACR,UAMpB8B","file":"editor/common.js","sourcesContent":["/**\n * Description\n */\n\n/*global wpApiSettings: false*/\n/*global Hametuha: false*/\n/*global HameditorPost: true*/\n/*global tinyMCE: false*/\n\n\n(function ($) {\n    'use strict';\n\n    var timer;\n\n    /**\n     * Resize Tiny MCE\n     *\n     * @param {Number} [delay]\n     */\n    function resize(delay) {\n        if (!delay) {\n            delay = 200;\n        }\n        if (timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(function () {\n            var winHeight  = $(window).height(),\n                $container = $('.container--hameditor'),\n                $editor    = $('.mce-edit-area iframe'),\n                height     = $editor.height(),\n                pad        = winHeight - $container.outerHeight();\n            $editor.height(height + pad - 1);\n        }, delay);\n    }\n\n\n    // Initialize\n    $(document).ready(function () {\n\n        var initTimer = setInterval(function () {\n            if ($('.mce-edit-area iframe').length) {\n                clearInterval(initTimer);\n                resize(20);\n            }\n        }, 100);\n\n        $('#quit-editting').click(function (e) {\n            e.preventDefault();\n            var url = $(this).attr('href');\n            Hametuha.confirm('編集をやめてこのページを移動しますか？ 保存していない変更は失われます。', function () {\n                window.location.href = url;\n            });\n        });\n    });\n\n    // Resize on window size change\n    $(window).on('resize', function () {\n        resize();\n    });\n\n    $(document).ready(function () {\n        angular.module('hametuha', ['ui.bootstrap'])\n            .filter('i18n', [function () {\n                return function (string, context) {\n                    switch( context ){\n                        case 'postStatus':\n                            switch( string.toLowerCase() ){\n                                case 'publish':\n                                    return '公開済み';\n                                case 'future':\n                                    return '公開予約';\n                                case 'private':\n                                    return '非公開';\n                                case 'auto-draft':\n                                case 'draft':\n                                    return '下書き';\n                                case 'pending':\n                                    return 'レビュー待ち';\n                                default:\n                                    return string;\n                            }\n                            break;\n                        case 'postStatusLabel':\n                            switch(string.toLowerCase()){\n                                case 'publish':\n                                case 'future':\n                                    return 'success';\n                                case 'private':\n                                    return 'danger';\n                                case 'pending':\n                                    return 'warning';\n                                default:\n                                    return 'default';\n                            }\n                            break;\n                        default:\n                            return string;\n                    }\n                };\n            }])\n            .directive('postStatus', function(){\n                return {\n                    restrict: 'E',\n                    replace: true,\n                    scope: {\n                       status: '@'\n                    },\n                    templateUrl: Hametuha.template('post-status.html')\n                };\n            })\n            .directive('postPublisher', ['$uibModal', function($uibModal){\n                return {\n                    restrict: 'E',\n                    replace: false,\n                    scope: {\n                        postDate: '=',\n                        postStatus: '@',\n                        postCallback: '@'\n                    },\n                    templateUrl: Hametuha.template('post-publisher.html'),\n                    link: function($scope, $elem, attr){\n\n                        $scope.ask = function(){\n                            var modal = $uibModal.open({\n                                animation: true,\n                                templateUrl: Hametuha.template('post-date-selector.html'),\n                                controller: 'postDateSelector',\n                                size: 'sm'\n                            });\n                            modal.result.then(\n                                function(result){\n                                },\n                                function(){\n                                    // Do nothing.\n                                }\n                            );\n                        };\n                    }\n                };\n            }])\n            .controller('postDateSelector', ['$scope', '$uibModalInstance', function($scope, $uibModalInstance){\n\n                $scope.type = '';\n\n                $scope.errorMsg = '';\n\n                $scope.ok = function(){\n                    $scope.errorMsg = 'だめじゃん';\n                    // $uibModalInstance.close('来年の4月');\n                };\n\n                $scope.cancel = function(){\n                    $scope.errorMsg = '';\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }])\n            .controller('hameditor', ['$scope', '$http', '$timeout', function ($scope, $http, $timeout) {\n\n                /**\n                 * Request endpoint\n                 *\n                 * @param {String} method\n                 * @param {String} endpoint\n                 * @param {Object} [data]\n                 * @returns {*}\n                 */\n                function api(method, endpoint, data) {\n                    var request = {\n                        method : method,\n                        url    : wpApiSettings.root + endpoint,\n                        headers: {\n                            'X-WP-Nonce': wpApiSettings.nonce\n                        }\n                    };\n                    if (data) {\n                        switch (method) {\n                            case 'POST':\n                            case 'PUT':\n                                request.data = data;\n                                break;\n                            default:\n                                request.params = data;\n                                break;\n                        }\n                    }\n                    return $http(request);\n                }\n\n                /**\n                 * Show indicator\n                 */\n                function start() {\n                    $('.hameditor__actions').addClass('hameditor__actions--loading');\n                }\n\n                /**\n                 * Hide indicator\n                 */\n                function end() {\n                    $('.hameditor__actions').removeClass('hameditor__actions--loading');\n                }\n\n                /**\n                 * Show error message\n                 *\n                 * @param {Object} response\n                 */\n                function errorHandler(response) {\n                    Hametuha.alert(response.data.message, true);\n                }\n\n                /**\n                 * Get initial data\n                 *\n                 * @param {Object} data\n                 * @returns {Object}\n                 */\n                function postData(data){\n                    data.title = $scope.post.title;\n                    tinyMCE.activeEditor.save();\n                    data.content = $('#hamce').val();\n                    data.cat = {\n                        taxonomy: 'anpi_cat',\n                        term_id : $scope.post.cat\n                    };\n                    return data;\n                }\n\n                $scope.post = HameditorPost;\n\n                HameditorPost.categories.forEach(function(option){\n                    if(option.active){\n                        $scope.post.cat = option.id;\n                    }\n                });\n\n                /**\n                 * Save post\n                 */\n                $scope.save = function () {\n                    start();\n                    var now = (new Date()).toISOString();\n                    api('POST', 'wp/v2/' + $scope.post.type + '/' + $scope.post.id, postData({\n                        modified: now\n                    })).then(\n                        function(response){\n                            $scope.post.modified = now;\n                            $scope.post.url = response.data.link;\n                            Hametuha.alert('保存しました。', 'success', 2000);\n                        },\n                        errorHandler\n                    ).then(end);\n                };\n\n                /**\n                 * Publish post\n                 */\n                $scope.publish = function () {\n                    Hametuha.confirm('公開してよろしいですか？', function () {\n                        start();\n                        var now = (new Date()).toISOString();\n                        api('POST', 'wp/v2/' + $scope.post.type + '/' + $scope.post.id, postData({\n                            status: 'publish',\n                            date  : now\n                        })).then(\n                            function (response) {\n                                $scope.post.status = 'publish';\n                                $scope.post.modified = now;\n                                $scope.post.date = now;\n                                $scope.post.url = response.data.link;\n                                Hametuha.alert('安否情報を公開しました！', 'success', 2000);\n                            },\n                            errorHandler\n                        ).then(end);\n                    });\n                };\n\n                /**\n                 * Make it private\n                 */\n                $scope.private = function () {\n                    start();\n                    api('POST', 'wp/v2/' + $scope.post.type + '/' + $scope.post.id, postData({\n                        status: 'private'\n                    })).then(\n                        function (response) {\n                            $scope.post.status = 'private';\n                            $scope.post.url = response.data.link;\n                            Hametuha.alert('投稿を非公開にしました。', 'warning', 2000);\n                        },\n                        errorHandler\n                    ).then(end);\n                };\n\n                /**\n                 * Delete post\n                 *\n                 * @param {String} redirect\n                 */\n                $scope.delete = function (redirect) {\n                    Hametuha.confirm('この投稿を削除してよろしいですか？ この操作は取り消せません。', function () {\n                        start();\n                        api('DELETE', 'wp/v2/' + $scope.post.type + '/' + $scope.post.id).then(\n                            function () {\n                                Hametuha.alert('削除しました。一覧に移動します。', 'warning', 2000);\n                                $timeout(function () {\n                                    window.location.href = redirect;\n                                }, 2000);\n                            },\n                            errorHandler\n                        ).then(end);\n                    }, true);\n                };\n\n            }]);\n\n    });\n})(jQuery);\n\n\n"],"sourceRoot":"/source/"}