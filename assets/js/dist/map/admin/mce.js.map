{"version":3,"sources":["admin/mce.js"],"names":["tinymce","PluginManager","add","editor","url","needIndent","node","test","textContent","setP","e","d","css","style","dom","selectors","nodes","doc","body","childNodes","jQuery","each","i","nodeName","push","children","j","k","length","join","getElementById","createElement","type","id","getElementsByTagName","appendChild","innerHTML","on"],"mappings":"AAMAA,QAAQC,cAAcC,IAAI,WAAY,SAASC,EAAQC,GAEnD,aAyBA,SAASC,EAAWC,GAChB,OAAS,wBAAwBC,KAAKD,EAAKE,aAQ/C,SAASC,EAAKC,GACV,IA3BgBC,EAAGC,EACfC,EA0BAC,EAAMX,EAAOW,IACbC,EAAY,GACZC,EAAQF,EAAIG,IAAIC,KAAKC,WACzBC,OAAOC,KAAKL,EAAO,SAASM,EAAGhB,GAC3B,OAAQA,EAAKiB,UACT,IAAK,IACIlB,EAAWC,IACZS,EAAUS,KAAK,uBAAyBF,EAAI,GAAK,KAErD,MACJ,IAAK,aAED,IADA,IAAIG,EAAWnB,EAAKa,WACXO,EAAI,EAAGC,EAAIF,EAASG,OAAQF,EAAIC,EAAGD,IACpC,MAAQD,EAASC,GAAGH,UAAalB,EAAWoB,EAASC,KACrDX,EAAUS,KAAK,gCAAkCF,EAAI,GAAK,oBAAuBI,EAAI,GAAM,QAU3GX,EAAUa,SAnDEjB,EAoDDG,EAAIG,IApDAL,EAoDKG,EAAUc,KAAK,KAAO,qBAlDxChB,EAAQF,EAAEmB,eAAe,oBAC3BjB,EAAQF,EAAEoB,cAAc,UAClBC,KAAO,WACbnB,EAAMoB,GAAK,eACXtB,EAAEuB,qBAAqB,QAAQ,GAAGC,YAAYtB,IAElDA,EAAMuB,UAAYxB,GAiDtBT,EAAOkC,GAAG,OAAQ5B,GAClBN,EAAOkC,GAAG,SAAU5B","file":"../../admin/mce.js","sourcesContent":["/**\n * Description\n */\n\n/*global tinymce: true*/\n\ntinymce.PluginManager.add('hametuha', function(editor, url) {\n\n    \"use strict\";\n\n    /**\n     * Apply CSS to TinyMCE editor\n     *\n     * @param {Document} d\n     * @param {String} css\n     */\n    function applyStyle(d, css){\n        var style;\n        if( !(style = d.getElementById('hametuha-mce')) ){\n            style = d.createElement('style');\n            style.type = 'text/css';\n            style.id = 'hametuha-mce';\n            d.getElementsByTagName('head')[0].appendChild(style);\n        }\n        style.innerHTML = css;\n    }\n\n    /**\n     * Detect if this element requires indent\n     *\n     * @param {Object} node\n     * @return {Boolean}\n     */\n    function needIndent(node){\n        return !(/^[ 　【】《〔〝『「（”\"'’\\(\\)]/.test(node.textContent));\n    }\n\n    /**\n     * Set auto indent\n     *\n     * @param {Object} e\n     */\n    function setP(e){\n        var dom = editor.dom,\n            selectors = [],\n            nodes = dom.doc.body.childNodes;\n        jQuery.each(nodes, function(i, node){\n            switch( node.nodeName ){\n                case 'P':\n                    if( !needIndent(node) ){\n                        selectors.push('body > p:nth-child(' + (i + 1) + ')');\n                    }\n                    break;\n                case 'BLOCKQUOTE':\n                    var children = node.childNodes;\n                    for (var j = 0, k = children.length; j < k; j++) {\n                        if ('P' === children[j].nodeName && !needIndent(children[j])) {\n                            selectors.push('body > blockquote:nth-child(' + (i + 1) + ') > p:nth-child(' + ( j + 1 ) + ')');\n                        }\n                    }\n                    break;\n                default:\n                    // Do nothing\n                    break;\n            }\n\n        });\n        if( selectors.length ){\n            applyStyle(dom.doc, selectors.join(',') + '{text-indent: 0;}');\n        }\n    }\n\n    // Add event listener\n    editor.on('init', setP);\n    editor.on('change', setP);\n\n});\n\n"]}