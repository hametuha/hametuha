{"version":3,"sources":["single-post.js"],"names":["Chart","defaults","global","responsive","$","Hametuha","views","Scroll","Backbone","View","extend","el","events","tategaki","scrollTop","ticker","slider","max","timer","toLast","animating","limit","initialize","_","bindAll","this","isTategaki","bindScroll","window","min","step","value","getSliderPosition","slide","updateTicker","change","stop","tickerHandler","find","append","on","scrollHandler","toggleScrollBind","date","Date","getTime","passedTime","Math","round","e","toggle","position","event","ui","isNaN","text","moveTo","percent","document","height","animate","finishAnimate","offset","limitPos","top","parseInt","ranker","length","postId","attr","ga","hitEvent","addClass","jQuery","ready","each","index","elt","str","startYakumono","hasClass","defaultView","$article","$nav","resetView","removeClass","trigger","preventDefault","target","replace","match","click","ctx","$radar","Modernizr","canvas","get","getContext","type","data","postScore","options","tooltips","callbacks","title","tip","labels","datasetIndex","replaceWith","$btn","button","ajaxSubmit","dataType","success","result","error","alert","message","guest","setTimeout","nextAll","val","post","ID","post_status","post_title"],"mappings":"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","file":"../single-post.js","sourcesContent":["/**\n * 破滅派投稿ページでだけ呼び出されるスクリプト\n */\n\n/*global Hametuha: true*/\n/*global postScore: true*/\n/*global Chart: true*/\n/*global Modernizr: true*/\n/*global Backbone: true*/\n/*global _: true*/\n/* jshint nonew: false */\n\nChart.defaults.global.responsive = true;\n\n\n/**\n * シングルポストで読み込む\n */\n(function($){\n    'use strict';\n\n\n    Hametuha.views.Scroll = Backbone.View.extend({\n\n        el: '#content-wrapper',\n\n        events: {\n        },\n\n        tategaki: false,\n\n        scrollTop: 0,\n\n        ticker: null,\n\n        slider: null,\n\n        max: 1000,\n\n        timer: 0,\n\n        toLast: false,\n\n        animating: false,\n\n        limit: null,\n\n        initialize: function(){\n            _.bindAll(this, 'getSliderPosition', 'toggleScrollBind', 'updateTicker', 'tickerHandler', 'scrollHandler', 'moveTo', 'finishAnimate', 'passedTime');\n            this.ticker = $('<span id=\"slider-ticker\">0%</span>');\n            this.tategaki = Hametuha.isTategaki();\n            this.slider = $('#slider');\n            this.limit = $('#post-author');\n            this.bindScroll = true;\n            this.scrollTop = $(window).scrollTop();\n            var position = 0;\n\n            this.slider.slider({\n                max: this.max,\n                min: 0,\n                step: 1,\n                value: this.getSliderPosition(position),\n                slide: this.updateTicker,\n                change: this.updateTicker,\n                stop: this.tickerHandler\n            });\n            this.slider.find('.ui-slider-handle').append(this.ticker);\n\n            // スクロールの監視を開始\n            $(window).on('resize scroll load', this.scrollHandler);\n            $(window).on('toggle.scroll.hametuha', this.toggleScrollBind);\n\n            // タイマー登録\n            var date = new Date();\n            this.timer = date.getTime();\n        },\n\n        /**\n         * 経過秒数を返す\n         *\n         * @returns {number}\n         */\n        passedTime: function(){\n            var date = new Date();\n            return Math.round(( date.getTime() - this.timer) / 1000);\n        },\n\n        /**\n         * Toggle Scroll bind\n         *\n         * @param e\n         * @param toggle\n         */\n        toggleScrollBind: function(e, toggle){\n            this.bindScroll = toggle;\n            if( toggle ){\n                $(window).scrollTop(this.scrollTop);\n            }\n        },\n\n        /**\n         * スライドのポジションを取得する\n         *\n         * @param position\n         * @returns {number}\n         */\n        getSliderPosition: function(position){\n            return this.tategaki ? this.max - position : position;\n        },\n\n        /**\n         * ティッカーの数字を更新\n         *\n         * @param event\n         * @param ui\n         */\n        updateTicker: function(event, ui){\n            if( !isNaN(ui.value) ){\n                this.ticker.text(ui.value / 10 + '%');\n            }\n        },\n\n        /**\n         * ティッカーを動かしたときのハンドラ\n         *\n         * @param event\n         * @param ui\n         */\n        tickerHandler: function(event, ui){\n            this.moveTo(ui.value / 1000);\n        },\n\n        /**\n         * コンテンツを任意の位置に移動\n         *\n         * @param percent\n         */\n        moveTo: function(percent){\n            var position = ($(document).height() - $(window).height()) * percent;\n            this.animating = true;\n            $('body, html').animate({ scrollTop: position }, 'fast', this.finishAnimate);\n        },\n\n        /**\n         * アニメーションが終わったらフラグを折る\n         */\n        finishAnimate: function(){\n            this.animating = false;\n        },\n\n        /**\n         * スクロールハンドラ\n         */\n        scrollHandler: function(){\n            if( this.bindScroll ){\n                this.scrollTop = $(window).scrollTop();\n                var offset = $(document).height() - $(window).height(),\n                    percent = Math.min(1, Math.max(0, this.scrollTop / offset)),\n                    limitPos = this.limit.offset().top + 50;\n                if( !this.animating ){\n                    this.slider.slider('value', parseInt(percent * 1000, 10));\n                }\n                var ranker = $('#work-end-ranker');\n                if( !this.toLast && limitPos < this.scrollTop + $(window).height() && ranker.length ){\n                    this.toLast = true;\n                    var postId = ranker.attr('data-post');\n                    Hametuha.ga.hitEvent('read', 'complete', postId);\n                    Hametuha.ga.hitEvent('read', 'passed', postId, this.passedTime());\n                    $('body').addClass('finish-reading');\n                }\n            }\n        }\n\n    });\n\n\n    jQuery(document).ready(function($){\n\n        // 段落の行頭揃え\n        $('.work-content p').each(function(index, elt){\n            if( !(Hametuha.str.startYakumono($(elt).text())) && !$(elt).hasClass('wp-caption-text') && !$(elt).attr('style') ){\n                $(elt).addClass('indent');\n            }\n        });\n\n        // ナビゲーション\n        var defaultView = 'viewing-content',\n            $article = $('#viewing-content'),\n            $nav = $('#footer-single'),\n            resetView = function(){\n                $article.attr('id', defaultView).removeClass('show-nav');\n                $(window).trigger('toggle.scroll.hametuha', [true]);\n            };\n        $nav.on('click', 'a', function(e){\n            e.preventDefault();\n            if( $(this).hasClass('active') ){\n                $(this).removeClass('active');\n                // ビューをデフォルトに戻す\n                resetView();\n            }else{\n                // 全部オフにする\n                $nav.find('a').removeClass('active');\n                $(this).addClass('active');\n                var target = $(this).attr('href').replace('#', '');\n                if( target.match(/reading-nav/) ){\n                    // ビューをデフォルトに戻す\n                    $article.attr('id', defaultView).addClass('show-nav');\n                }else{\n                    $article.attr('id', 'viewing-' + target.replace('-wrapper','')).removeClass('show-nav');\n                    $(window).trigger('toggle.scroll.hametuha', [false]);\n                    $(window).scrollTop(0);\n                }\n\n            }\n        });\n        $('.reset-viewer').click(function(e){\n            e.preventDefault();\n            resetView();\n            $nav.find('a').removeClass('active');\n        });\n\n\n        // スクロール関係をまとめる\n        new Hametuha.views.Scroll();\n\n        // レーダーチャート\n        var $radar = $('#single-radar'), ctx, chart;\n        if( $radar.length ){\n            if( Modernizr.canvas ){\n                ctx = $radar.get(0).getContext('2d');\n                chart = new Chart(ctx, {\n                  type: 'radar',\n                  data: postScore.data,\n                  options: {\n                    tooltips: {\n                      callbacks: {\n                        title: function (tip, data) {\n                          return postScore.labels[tip[0].datasetIndex][tip[0].index];\n                        }\n                      }\n                    }\n                  }\n                });\n            }else{\n                $radar.replaceWith('<p class=\"alert alert-danger\">Canvasに対応していないため、ご利用の環境ではレーダーチャートを表示できません。</p>');\n            }\n        }\n\n        // 評価送信\n        $(document).on('submit', '#review-form', function(e){\n            e.preventDefault();\n            var $btn = $(this).find('input[type=submit]');\n            $btn.button('loading');\n            $(this).ajaxSubmit({\n                dataType: 'json',\n                success: function(result){\n                    $btn.button('reset');\n                    if( result.error ){\n                        Hametuha.alert(result.message, true);\n                    }else{\n                        Hametuha.alert(result.message);\n                        $btn.button('complete');\n                        if( result.guest ){\n                            setTimeout(function(){\n                                $btn.attr('disabled', true);\n                            }, 50);\n                        }\n                    }\n                },\n                error: function(){\n                    Hametuha.alert('評価を送信できませんでした。', true);\n                    $btn.button('reset');\n                }\n\n            });\n        });\n\n        // スターレーティング\n        $(document).on('click', '.star-rating i', function(){\n            var value = parseInt($(this).attr('data-value'), 10);\n            $('.star-rating i').each(function(index, elt){\n                if( parseInt($(elt).attr('data-value'), 10) <= value ){\n                    $(elt).addClass('active');\n                }else{\n                    $(elt).removeClass('active');\n                }\n            });\n            $(this).nextAll('input[type=hidden]').val(value);\n        });\n\n\n        // リスト作成完了\n        $(document).on('created.hametuha', '.list-create-form', function(event, post){\n            $('#list-changer').append('<div class=\"checkbox\"><label>' +\n            '<input type=\"checkbox\" name=\"lists[]\" value=\"' + post.ID + '\" checked>' +\n            ( 'private' === post.post_status ? '非公開: ' : '公開　: ') + post.post_title +\n            '</label></div>');\n        });\n\n    });\n\n\n\n})(jQuery);"]}